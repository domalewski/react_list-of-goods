{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sort","reset","this","goods","visibleGoods","good1","good2","LENGTH","length","ALPHABET","localeCompare","getReorderedGoods","resetButton","className","type","onClick","cn","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,KAAO,SAACJ,GAAD,OAAwB,WAC7B,EAAKG,SAAS,CAAEH,eAbpB,EAgBEK,MAAQ,WACN,EAAKF,UAAS,iBAAO,CACnBJ,YAAY,EACZC,SAAUL,EAASM,UAnBzB,4CAuBE,WACE,MAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EAvDH,SACLA,EADK,GAGJ,IADCP,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNS,EAAY,YAAOD,GAiBzB,OAfAC,EAAaJ,MAAK,SAACK,EAAOC,GACxB,OAAQV,GACN,KAAKL,EAASgB,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKjB,EAASkB,SACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,MAITX,GACFS,EAAaN,UAGRM,EAiCSO,CAAkBnB,EAAiBU,KAAKR,OAChDkB,EAAchB,IAAaL,EAASM,MAAQF,EAElD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASb,KAAKF,KAAKT,EAASkB,UAC5BI,UAAWG,IAAG,iBAAkB,CAC9B,WAAYpB,IAAaL,EAASkB,WAJtC,iCAUA,wBACEK,KAAK,SACLC,QAASb,KAAKF,KAAKT,EAASgB,QAC5BM,UAAWG,IAAG,oBAAqB,CACjC,WAAYpB,IAAaL,EAASgB,SAJtC,4BAUA,wBACEO,KAAK,SACLD,UAAWG,IAAG,oBAAqB,CACjC,YAAarB,IAEfoB,QAASb,KAAKJ,QALhB,qBAUCc,GACC,wBACEE,KAAK,SACLC,QAASb,KAAKD,MACdY,UAAU,4BAHZ,sBAUJ,6BACE,6BACGV,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBA3EtC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4a03723b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sort = (sortType: SortType) => () => {\n    this.setState({ sortType });\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n    const resetButton = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sort(SortType.ALPHABET)}\n            className={cn('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sort(SortType.LENGTH)}\n            className={cn('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {resetButton && (\n            <button\n              type=\"button\"\n              onClick={this.reset}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li data-cy=\"Good\" key={good}>{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}